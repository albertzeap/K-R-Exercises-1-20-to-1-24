#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define TAB_STOP 10
#define MAX_TAB_STOP 60

void entab(FILE * fin, FILE * fout, int TAB_STOP); //Entab function prototype

int main(int argc, const char * argv[]) {
    if (argc != 3 && argc != 4 ){
        fprintf(stderr, "Usage : ./entab inputfile(outputfile tabstops (optional)\n");
        exit(1);
    }

    FILE * fin = fopen(argv[1], "r");
    FILE * fout = fopen(argv[2], "w");
    if (fin == NULL || fout == NULL){
        fprintf(stderr,"Usage: ./entab inputfile outputfile\n" );
        exit(1);
    }
    int c;
    while ((c = fgetc(fin)) != EOF) {
        if (c != ' '){
            fputc ( c ,fout);
        }
        else {
            entab(fin, fout, TAB_STOP)
        }

    }
     fclose (fin);
     fclose(fout);
     return 0;
}

void entab(FILE *fin, FILE * fout, int TAB_STOP){
  int counter = 1;
  int c;
  while ((c = fgetc(fin) != EOF){
    ++counter; // Count the number of spaces
  }
  int ntabs = counter / TAB_STOP; //calculate how many tabs the spaces equate to
  int nspaces = counter % TAB_STOP; // use the remaining as spaces
  while (ntabs-- > 0){ fputc('\t, fout');}
  while (nspaces-- > 0){fputc (' ', fout);}

}
